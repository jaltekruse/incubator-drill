# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http:# www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{
  modes: [
    {name: "Optional", prefix: "Nullable"},
    {name: "Required", prefix: ""},
    {name: "Repeated", prefix: "Repeated"}
    ],
  types: [
    {
      major: "Fixed",
      width: 1,
      javaType: "byte",
      boxedType: "Byte",
      fitsInPrimitive: true,
      setWithInt: true,
      minor: [
        { class: "TinyInt", valueHolder: "IntHolder"},
        { class: "UInt1", valueHolder: "UInt1Holder"}
      ]
    },
    {
      major: "Fixed",
      width: valueLength,
      javaType: "ByteBuf",
      boxedType: "ByteBuf",
      fitsInPrimitive: false,
      setWithInt: false,
      minor: [
        { class: "FixedBinary", valueHolder: "FixedBinaryHolder"}
      ]
    },
    {
      major: "Fixed",
      width: 2,
      javaType: "char",
      boxedType: "Character",
      fitsInPrimitive: true,
      setWithInt: true,
      minor: [
        { class: "UInt2", valueHolder: "UInt2Holder"}
      ]
    },
    {
      major: "Fixed",
      width: 2,
      javaType: "short",
      boxedType: "Short",
      fitsInPrimitive: true,
      setWithInt: true,
      minor: [
        { class: "SmallInt", valueHolder: "Int2Holder"},
      ]
    },
    {
      major: "Fixed",
      width: 4,
      javaType: "int",
      boxedType: "Integer",
      fitsInPrimitive: true,
      setWithInt: false,
      minor: [
        { class: "Int", valueHolder: "IntHolder" },
        { class: "UInt4", valueHolder: "UInt4Holder" },
        { class: "Float4", javaType: "float" },
        <#-- 
        { class: "Decimal4", maxPrecisionDigits: 8, scale: 4, javaType: "float"},
        { class: "Date" }
        -->
      ]
    },
    {
      major: "Fixed",
      width: 8,
      javaType: "long",
      boxedType: "Long",
      fitsInPrimitive: true,
      setWithInt: false,
      minor: [
        { class: "BigInt" },
        { class: "UInt8" },
        { class: "Float8", javaType: "double" , boxedType: "Double"},
        <#-- 
        { class: "Decimal8", maxPrecisionDigits: 18, scale: 4, javaType: "double", boxedType: "Double"},
        { class: "Money", maxPrecisionDigits: 2, scale: 1, }, 
        { class: "Time" },
        { class: "TimeStamp" },
        { class: "DateTime" }
        -->
      ]
    },
    <#--
    {
      major: "Fixed",
      width: 12,
      javaType: "ByteBuf",
      fitsInPrimitive: false,
      setWithInt: false,
      minor: [
        { class: "Decimal12", maxPrecisionDigits: 28, scale: 5},
        { class: "TimeTZ" },
        { class: "Interval" }
      ]
    },
    {
      major: "Fixed",
      width: 16,
      javaType: "ByteBuf",
      fitsInPrimitive: false,
      setWithInt: false,
      minor: [
        { class: "Decimal16", maxPrecisionDigits: 37, scale: 6}
      ]
    },
    -->
    {
      major: "VarLen",
      width: 4,
      javaType: "int",
      fitsInPrimitive: false,
      setWithInt: false,
      minor: [
        { class: "VarBinary" },
        { class: "VarChar" }
        { class: "Var16Char" }
      ]
    },
    {
      major: "Bit",
      width: 1,
      javaType: "int",
      fitsInPrimitive: true,
      setWithInt: false,
      minor: [
        { class: "Bit" }
      ]
    }
  ]
}
